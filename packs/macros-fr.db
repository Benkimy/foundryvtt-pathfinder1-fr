{"name":"Mettre à jour les aptitudes","permission":{"default":0,"FgnRmbsZ0zuxNbBw":3},"type":"script","flags":{},"scope":"global","command":"// SCRIPT\r\n// Do NOT change unless you know what you're doing!\r\n\r\nconst tokens = canvas.tokens.controlled;\r\nlet actors = tokens.map(o => o.actor);\r\nif (!actors.length) actors = game.actors.entities.filter(o => o.isPC && o.hasPerm(game.user, \"OWNER\"));\r\nactors = actors.filter(o => o.hasPerm(game.user, \"OWNER\"));\r\n\r\nfunction getAbbr(name) {\r\n  if(name == \"Barbare\") { return \"Brb\" }\r\n  else if(name == \"Prêtre combattant\") { return \"Prc\" }\r\n  else if(name == \"Prêtre combattant\") { return \"Prc\" }\r\n  else if(name == \"Archer-mage\") { return \"ArM\" }\r\n  else if(name == \"Champion occultiste\") { return \"Chp\" }\r\n  else if(name == \"Magus\") { return \"Mgs\" }\r\n  else if(name == \"Chaman\") { return \"Chm\" }\r\n  else { return name.substring(0,3) }\r\n};\r\n\r\nif (actors.length != 1) { \r\n  ui.notifications.error(\"Veuillez choisir un personnage dans la scène!\")\r\n} else {\r\n  let actor = actors[0]\r\n\r\n  Dialog.confirm({\r\n    title: \"Mise à jour des aptitudes\",\r\n    content: `Des aptitudes seront automatiquement ajoutées à <b>${actor.name}</b> en fonction de ses classes.`,\r\n      yes: function() {\r\n\r\n        let classes = []\r\n        let classfeatures = []\r\n        for(let i=0; i<actor.data.items.length; i++) {\r\n          const item = actor.data.items[i]\r\n          if(item.type == \"feat\" && item.data.featType == \"classFeat\") {\r\n            classfeatures.push(item.name)\r\n          } else if(item.type == \"class\") {\r\n            classes.push(item)\r\n          }\r\n        }\r\n        \r\n        if(classes.length > 0) {\r\n          const pack = game.packs.get(\"pf1-fr.classfeaturesfr\");\r\n          pack.getIndex().then(index => {\r\n            let features = []\r\n            classes.forEach(c => {\r\n              let abbr = getAbbr(c.name)\r\n              let level = Number(c.data.level)\r\n              for(let lvl=1; lvl<=level; lvl++) {\r\n                for(const i in index) { \r\n                  const f = index[i]\r\n                  if(f.name.startsWith(`${abbr} ${lvl}:`) && classfeatures.indexOf(f.name) < 0) {\r\n                    features.push(pack.getEntity(f._id))\r\n                  }\r\n                }\r\n              }\r\n            });\r\n            Promise.all(features).then(list => {\r\n              let toAdd = []\r\n              list.forEach( f => { if(f.data.data.tags[0].indexOf(\"De base\") >= 0) { toAdd.push(f) } } );\r\n              actor.createEmbeddedEntity(\"OwnedItem\", toAdd)\r\n              ui.notifications.info(`${toAdd.length} aptitude(s) ajoutées!`)\r\n            });\r\n          });\r\n        }\r\n      },\r\n      no: () => {}\r\n  });\r\n}","author":"FgnRmbsZ0zuxNbBw","img":"systems/pf1/icons/skills/blue_18.jpg","actorIds":[],"_id":"UN955S6O6dX0xzmM"}
{"name":"Migration des poids (kg -> lb)","permission":{"default":0,"FgnRmbsZ0zuxNbBw":3},"type":"script","flags":{},"scope":"global","command":"const factor = 2\r\n\r\nDialog.confirm({\r\n  title: \"Mettre à jour les poids des objets\",\r\n  content: `Êtes-vous sûr de vouloir mettre à jour les poids des objets pour tous les personnages (kg => lb)? Il est recommandé de faire un backup de actors.db avant de poursuivre!!`,\r\n    yes: async function() {\r\n      let actors = []\r\n      game.actors.forEach( a => actors.push(a) )\r\n      for(let a=0; a<actors.length; a++) {\r\n        let actor = actors[a]\r\n        let updates = []\r\n        for(let i=0; i<actor.data.items.length; i++) {\r\n          const item = actor.data.items[i]\r\n          if(item.data.weight && item.data.weight > 0) {\r\n            let newWeight = Math.round((item.data.weight / factor) * 100) / 100\r\n            let update = { data: { weight: newWeight } }\r\n            update._id = item._id\r\n            updates.push(update)\r\n          }\r\n        }\r\n        await actor.updateEmbeddedEntity(\"OwnedItem\", updates);\r\n      }\r\n    },\r\n    no: () => {}\r\n});","author":"FgnRmbsZ0zuxNbBw","img":"systems/pf1/icons/misc/divert.png","actorIds":[],"_id":"AVAxzKVKlQxUZxAR"}
